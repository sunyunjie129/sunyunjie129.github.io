#
# Build authorized pull requests, creating a compressed content tgz
# with the generated site, storing it as an artifact.
#
name: Stage content
on:
  pull_request: # considered pull_request_target, not needed
    types: [opened]
  pull_request_review:
    types: [submitted, edited]
  pull_request_review_comment:
    types: [created, edited]
jobs:
  authorize:
    name: "Maintainer approval"
    runs-on: ubuntu-latest
    outputs:
      isMaintainerApproved: ${{ steps.authorize.outputs.result }}
    steps:
    #       actions/checkout@v2
    - uses: actions/checkout@2036a08e25fa78bbd946711a407b529a0a1204bf
    #       actions/github-script@v2
    - uses: actions/github-script@44b873bc975058192f5279ebe7579496381f575d
      name: "Authorization check"
      id: authorize
      with:
        result-encoding: string
        script: |
          const authorizationCheck = require(`${process.env.GITHUB_WORKSPACE}/.github/workflows/authorizationCheck.js`)
          const output = await authorizationCheck({github, context});
          const authorized = output && output.authorized === true ? 'authorized-writer' : 'false';
          return authorized;
    - name: "No action required"
      if: steps.authorize.outputs.result != 'authorized-writer'
      run: |
        echo No further action necessary or approved at this time.
        echo To authorize a pull request build, one of:
        echo - Pull request is needs to be opened by a current repository maintainer with write permission
        echo - Pull request comment is made by a repository maintainer with the string "/build" to approve building the content
        echo - Pull request is approved by a repository maintainer
    - name: "Build approval"
      if: steps.authorize.outputs.result == 'authorized-writer' && github.sha
      run: |
        echo Building the content for this commit has been approved, either because the PR was opened by a maintainer, or the PR was approved by a maintainer, or a maintainer passed the "/build" value inside a comment.
  build:
    name: "Build content"
    runs-on: ubuntu-latest
    needs: authorize
    if: ${{ needs.authorize.outputs.isMaintainerApproved == 'authorized-writer' }}
    steps:
    #       actions/checkout@v2
    - uses: actions/checkout@2036a08e25fa78bbd946711a407b529a0a1204bf
    - uses: azure/docker-login@210cfedcb2e18efca1a159af35649e6f3b092f22
      with:
        login-server: 'docker.pkg.github.com'
        username: ${{ secrets.READONLY_PACKAGE_SP }}
        password: ${{ secrets.READONLY_PACKAGE_TOKEN }}
    #       actions/github-script@v2
    - uses: actions/github-script@44b873bc975058192f5279ebe7579496381f575d
      name: "Get PR number"
      id: pull_request_number
      with:
        result-encoding: string
        script: |      
          const { payload, eventName } = context;
          const { sender, action, pull_request, review, repository } = payload;
          return pull_request ? pull_request.number : '';
    - name: jekyll-build
      run: |
        docker run -i -v ${PWD}:/usr/local/site docker.pkg.github.com/microsoft/opensource.microsoft.com/custom-jekyll-builder:latest sh << COMMANDS
        pwd && whoami
        cd /usr/local/site
        ls -la
        bundle install
        npm i
        ./node_modules/gulp/bin/gulp.js build
        JEKYLL_ENV=opensource-dev.microsoft.com PR_NUMBER=${{ steps.pull_request_number.outputs.result }} jekyll build
        COMMANDS
    - name: compress-site
      run: tar -czvf ../pullrequest.${{ steps.pull_request_number.outputs.result }}.tar.gz .
      working-directory: /home/runner/work/opensource.microsoft.com/opensource.microsoft.com/_site
    #       actions/upload-artifact/v2
    - uses: actions/upload-artifact@58740802ef971a2d71eff71e63d48ab68d1f5507
      with:
        name: pullrequest-${{ steps.pull_request_number.outputs.result }}-content
        path: /home/runner/work/opensource.microsoft.com/opensource.microsoft.com/pullrequest.${{ steps.pull_request_number.outputs.result }}.tar.gz
